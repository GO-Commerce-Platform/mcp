# GO-Commerce MCP Service Configuration
# Multi-tenant Quarkus service with schema-based tenant isolation

# ============================================================================
# Application Configuration
# ============================================================================
quarkus.application.name=mcp-server
quarkus.http.port=8080
quarkus.http.root-path=/
quarkus.rest-client.api.url=/api/v1

# ============================================================================
# Database Configuration - PostgreSQL with Schema-based Multi-tenancy
# ============================================================================
quarkus.datasource.db-kind=postgresql
quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5433/gocommerce
quarkus.datasource.username=${DB_USER:gocommerceuser}
quarkus.datasource.password=${DB_PASSWORD:gocommercepass}
quarkus.datasource.jdbc.min-size=5
quarkus.datasource.jdbc.max-size=20
quarkus.datasource.jdbc.acquisition-timeout=PT10S

# Multi-tenancy Configuration
quarkus.hibernate-orm.multitenant=SCHEMA
quarkus.hibernate-orm.database.generation=none
quarkus.hibernate-orm.log.sql=false
quarkus.hibernate-orm.show-sql=false

# ============================================================================
# Logging Configuration - Structured JSON Logging
# ============================================================================
quarkus.log.level=INFO
quarkus.log.category."dev.tiodati.saas.gocommerce.mcp".level=DEBUG
quarkus.log.category."org.hibernate".level=WARN
quarkus.log.category."org.hibernate.SQL".level=WARN
quarkus.log.category."org.hibernate.type.descriptor.sql".level=WARN

# Console logging with JSON format for structured logs
quarkus.log.console.json=true
quarkus.log.console.json.pretty-print=false
quarkus.log.console.json.date-format=yyyy-MM-dd'T'HH:mm:ss.SSSXXX
quarkus.log.console.json.record-delimiter=\n
quarkus.log.console.json.additional-field."service.name".value=mcp-server
quarkus.log.console.json.additional-field."service.version".value=${quarkus.application.version:1.0.0-SNAPSHOT}
quarkus.log.console.json.additional-field."environment".value=${ENVIRONMENT:development}

# File logging for production
quarkus.log.file.enable=true
quarkus.log.file.path=logs/mcp-server.log
quarkus.log.file.level=INFO
quarkus.log.file.format=%d{yyyy-MM-dd HH:mm:ss,SSS} %h %N[%i] %-5p [%c{1.}] (%t) %s%e%n
quarkus.log.file.rotation.max-file-size=10M
quarkus.log.file.rotation.max-backup-index=5
quarkus.log.file.rotation.file-suffix=.yyyy-MM-dd
quarkus.log.file.rotation.rotate-on-boot=true

# Async logging for performance
quarkus.log.handler.console."ASYNC".enable=true
quarkus.log.handler.console."ASYNC".queue-length=1024
quarkus.log.handler.console."ASYNC".overflow-action=BLOCK

# ============================================================================
# Health Checks and Metrics Configuration
# ============================================================================
# Health checks
quarkus.smallrye-health.root-path=/q/health
quarkus.smallrye-health.liveness-path=/q/health/live
quarkus.smallrye-health.readiness-path=/q/health/ready
quarkus.smallrye-health.startup-path=/q/health/started

# Metrics
quarkus.micrometer.enabled=true
quarkus.micrometer.export.prometheus.enabled=true
quarkus.micrometer.export.prometheus.path=/q/metrics
quarkus.micrometer.binder.http-server.enabled=true
quarkus.micrometer.binder.http-client.enabled=true
quarkus.micrometer.binder.jvm.enabled=true
quarkus.micrometer.binder.system.enabled=true

# OpenAPI/Swagger Configuration
quarkus.swagger-ui.enable=true
quarkus.swagger-ui.path=/q/swagger-ui
quarkus.smallrye-openapi.path=/q/openapi
quarkus.smallrye-openapi.info-title=GO-Commerce MCP API
quarkus.smallrye-openapi.info-version=1.0.0
quarkus.smallrye-openapi.info-description=Multi-tenant Model Context Protocol service for AI agent integration

# ============================================================================
# Development Profile
# ============================================================================
%dev.quarkus.log.category."dev.tiodati.saas.gocommerce.mcp".level=DEBUG
%dev.quarkus.live-reload.enabled=true
%dev.quarkus.hibernate-orm.log.sql=true
%dev.quarkus.hibernate-orm.show-sql=true
%dev.quarkus.log.category."org.hibernate.SQL".level=DEBUG

# ============================================================================
# Test Profile
# ============================================================================
# Use the actual gocommerce PostgreSQL database on port 5433 for tests
%test.quarkus.datasource.db-kind=postgresql
%test.quarkus.datasource.username=gocommerceuser
%test.quarkus.datasource.password=gocommercepass
%test.quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5433/gocommerce
%test.quarkus.hibernate-orm.database.generation=none
%test.quarkus.hibernate-orm.log.sql=true
%test.quarkus.hibernate-orm.show-sql=true
# Override port for tests to avoid conflicts with main app
%test.quarkus.http.port=8081
# Disable structured JSON logging for tests for better readability
%test.quarkus.log.console.json=false
